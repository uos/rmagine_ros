#!/usr/bin/env python
PACKAGE = "rmagine_ros"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

M_PI = 3.14159265359

gen.add("width", int_t, 4, "Width", 200, 1, 1000)
gen.add("height", int_t, 4, "Height", 150, 1, 1000)

gen.add("range_min", double_t, 4, "Minimum range", 0.0, 0.0, 10.0)
gen.add("range_max", double_t, 4, "Maximum range", 100.0, 0.0, 1000.0)

gen.add("cx", double_t, 4, "Cx", 100.0, 0.0, 1000.0)
gen.add("cy", double_t, 4, "Cy", 75.0, 0.0, 1000.0)

gen.add("fx", double_t, 4, "Fx", 100.0, 0.0, 2000.0)
gen.add("fy", double_t, 4, "Fy", 100.0, 0.0, 2000.0)

comp_enum = gen.enum([ gen.const("CPU",      int_t, 0, "CPU (Embree)"),
                       gen.const("GPU",     int_t, 1, "GPU (OptiX)")],
                     "Computing unit")

gen.add("computing_unit", int_t, 0, "Computing Unit", 0, 0, 1, edit_method=comp_enum)


gen.add("noise_gauss", bool_t, 0, "Enable gaussian noise", False)
gen.add("noise_gauss_mean", double_t, 0, "Gaussian Noise mean", 0.0, -0.2, 0.2)
gen.add("noise_gauss_stddev", double_t, 0, "Gaussian Noise standard deviation", 0.01, 0.0, 0.5)


gen.add("noise_rel_gauss", bool_t, 0, "Enable gaussian noise; range dependent", False)
gen.add("noise_rel_gauss_mean", double_t, 0, "Gaussian Noise mean", 0.0, -0.2, 0.2)
gen.add("noise_rel_gauss_stddev", double_t, 0, "Gaussian Noise standard deviation", 0.01, 0.0, 0.5)
gen.add("noise_rel_gauss_range_exp", double_t, 0, "Gaussian Noise mean", 0.0, -3.0, 3.0)

gen.add("noise_dust", bool_t, 0, "Enable uniform dust noise", False)
gen.add("noise_dust_hit_prob", double_t, 0, "Hit probability per meter", 0.0, 0.0, 1.0)
gen.add("noise_dust_ret_prob", double_t, 0, "Return probability per meter", 0.9, 0.0, 1.0)


exit(gen.generate(PACKAGE, "camera_simulator", "CameraModel"))